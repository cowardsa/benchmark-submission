(set-info :smt-lib-version 2.6)
(set-logic QF_BV)
(set-info :source |
            Generated by: Samuel Coward
            Generated on: 2025-08-12
            Generator: CIRCT
            Application: Datapath synthesis of digital circuits 
            Target solver: Bitwuzla
            Time limit: 300.0
            Benchmarks generated by the CIRCT tool to check correctness of lowering
            from word-level bitvector circuit to a gate-level netlist.
            Using compressor tree circuits proves challenging for SMT.|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)

; solver scope 0
(declare-const tmp (_ BitVec 4))
(declare-const tmp_0 (_ BitVec 4))
(declare-const tmp_1 (_ BitVec 4))
(assert (let ((tmp_2 ((_ extract 0 0) tmp_1)))
        (let ((tmp_3 ((_ extract 0 0) tmp)))
        (let ((tmp_4 ((_ extract 0 0) tmp_0)))
        (let ((tmp_5 (bvand tmp_4 tmp_3)))
        (let ((tmp_6 (bvand tmp_5 tmp_2)))
        (let ((tmp_7 (bvxor tmp_6 #b1)))
        (let ((tmp_8 (bvxor tmp_2 #b1)))
        (let ((tmp_9 (bvxor tmp_5 #b1)))
        (let ((tmp_10 (bvand tmp_9 tmp_8)))
        (let ((tmp_11 (bvxor tmp_10 #b1)))
        (let ((tmp_12 (bvand tmp_11 tmp_7)))
        (let ((tmp_13 ((_ extract 1 1) tmp_1)))
        (let ((tmp_14 ((_ extract 1 1) tmp_0)))
        (let ((tmp_15 (bvand tmp_14 tmp_3)))
        (let ((tmp_16 ((_ extract 1 1) tmp)))
        (let ((tmp_17 (bvand tmp_4 tmp_16)))
        (let ((tmp_18 (bvand tmp_17 tmp_15)))
        (let ((tmp_19 (bvxor tmp_18 #b1)))
        (let ((tmp_20 (bvxor tmp_15 #b1)))
        (let ((tmp_21 (bvxor tmp_17 #b1)))
        (let ((tmp_22 (bvand tmp_21 tmp_20)))
        (let ((tmp_23 (bvxor tmp_22 #b1)))
        (let ((tmp_24 (bvand tmp_23 tmp_19)))
        (let ((tmp_25 (bvand tmp_24 tmp_13)))
        (let ((tmp_26 (bvxor tmp_25 #b1)))
        (let ((tmp_27 (bvxor tmp_13 #b1)))
        (let ((tmp_28 (bvxor tmp_24 #b1)))
        (let ((tmp_29 (bvand tmp_28 tmp_27)))
        (let ((tmp_30 (bvxor tmp_29 #b1)))
        (let ((tmp_31 (bvand tmp_30 tmp_26)))
        (let ((tmp_32 (bvand tmp_31 tmp_6)))
        (let ((tmp_33 (bvxor tmp_32 #b1)))
        (let ((tmp_34 (bvxor tmp_31 #b1)))
        (let ((tmp_35 (bvand tmp_34 tmp_7)))
        (let ((tmp_36 (bvxor tmp_35 #b1)))
        (let ((tmp_37 (bvand tmp_36 tmp_33)))
        (let ((tmp_38 ((_ extract 2 2) tmp_1)))
        (let ((tmp_39 ((_ extract 2 2) tmp_0)))
        (let ((tmp_40 (bvand tmp_39 tmp_3)))
        (let ((tmp_41 (bvand tmp_14 tmp_16)))
        (let ((tmp_42 ((_ extract 2 2) tmp)))
        (let ((tmp_43 (bvand tmp_4 tmp_42)))
        (let ((tmp_44 (bvand tmp_43 tmp_41)))
        (let ((tmp_45 (bvxor tmp_44 #b1)))
        (let ((tmp_46 (bvxor tmp_41 #b1)))
        (let ((tmp_47 (bvxor tmp_43 #b1)))
        (let ((tmp_48 (bvand tmp_47 tmp_46)))
        (let ((tmp_49 (bvxor tmp_48 #b1)))
        (let ((tmp_50 (bvand tmp_49 tmp_45)))
        (let ((tmp_51 (bvand tmp_50 tmp_40)))
        (let ((tmp_52 (bvxor tmp_51 #b1)))
        (let ((tmp_53 (bvxor tmp_40 #b1)))
        (let ((tmp_54 (bvxor tmp_50 #b1)))
        (let ((tmp_55 (bvand tmp_54 tmp_53)))
        (let ((tmp_56 (bvxor tmp_55 #b1)))
        (let ((tmp_57 (bvand tmp_56 tmp_52)))
        (let ((tmp_58 (bvand tmp_57 tmp_18)))
        (let ((tmp_59 (bvxor tmp_58 #b1)))
        (let ((tmp_60 (bvxor tmp_57 #b1)))
        (let ((tmp_61 (bvand tmp_60 tmp_19)))
        (let ((tmp_62 (bvxor tmp_61 #b1)))
        (let ((tmp_63 (bvand tmp_62 tmp_59)))
        (let ((tmp_64 (bvand tmp_63 tmp_38)))
        (let ((tmp_65 (bvxor tmp_64 #b1)))
        (let ((tmp_66 (bvxor tmp_38 #b1)))
        (let ((tmp_67 (bvxor tmp_63 #b1)))
        (let ((tmp_68 (bvand tmp_67 tmp_66)))
        (let ((tmp_69 (bvxor tmp_68 #b1)))
        (let ((tmp_70 (bvand tmp_69 tmp_65)))
        (let ((tmp_71 (bvand tmp_70 tmp_25)))
        (let ((tmp_72 (bvxor tmp_71 #b1)))
        (let ((tmp_73 (bvxor tmp_70 #b1)))
        (let ((tmp_74 (bvand tmp_73 tmp_26)))
        (let ((tmp_75 (bvxor tmp_74 #b1)))
        (let ((tmp_76 (bvand tmp_75 tmp_72)))
        (let ((tmp_77 (bvand tmp_76 tmp_32)))
        (let ((tmp_78 (bvxor tmp_77 #b1)))
        (let ((tmp_79 (bvxor tmp_76 #b1)))
        (let ((tmp_80 (bvand tmp_79 tmp_33)))
        (let ((tmp_81 (bvxor tmp_80 #b1)))
        (let ((tmp_82 (bvand tmp_81 tmp_78)))
        (let ((tmp_83 (bvand tmp_72 tmp_78)))
        (let ((tmp_84 (bvxor tmp_83 #b1)))
        (let ((tmp_85 ((_ extract 3 3) tmp_1)))
        (let ((tmp_86 ((_ extract 3 3) tmp_0)))
        (let ((tmp_87 (bvand tmp_86 tmp_3)))
        (let ((tmp_88 (bvand tmp_45 tmp_52)))
        (let ((tmp_89 (bvxor tmp_88 #b1)))
        (let ((tmp_90 (bvand tmp_39 tmp_16)))
        (let ((tmp_91 (bvand tmp_14 tmp_42)))
        (let ((tmp_92 ((_ extract 3 3) tmp)))
        (let ((tmp_93 (bvand tmp_4 tmp_92)))
        (let ((tmp_94 (bvand tmp_93 tmp_91)))
        (let ((tmp_95 (bvxor tmp_94 #b1)))
        (let ((tmp_96 (bvxor tmp_91 #b1)))
        (let ((tmp_97 (bvxor tmp_93 #b1)))
        (let ((tmp_98 (bvand tmp_97 tmp_96)))
        (let ((tmp_99 (bvxor tmp_98 #b1)))
        (let ((tmp_100 (bvand tmp_99 tmp_95)))
        (let ((tmp_101 (bvand tmp_100 tmp_90)))
        (let ((tmp_102 (bvxor tmp_101 #b1)))
        (let ((tmp_103 (bvxor tmp_90 #b1)))
        (let ((tmp_104 (bvxor tmp_100 #b1)))
        (let ((tmp_105 (bvand tmp_104 tmp_103)))
        (let ((tmp_106 (bvxor tmp_105 #b1)))
        (let ((tmp_107 (bvand tmp_106 tmp_102)))
        (let ((tmp_108 (bvand tmp_107 tmp_89)))
        (let ((tmp_109 (bvxor tmp_108 #b1)))
        (let ((tmp_110 (bvxor tmp_107 #b1)))
        (let ((tmp_111 (bvand tmp_110 tmp_88)))
        (let ((tmp_112 (bvxor tmp_111 #b1)))
        (let ((tmp_113 (bvand tmp_112 tmp_109)))
        (let ((tmp_114 (bvand tmp_113 tmp_87)))
        (let ((tmp_115 (bvxor tmp_114 #b1)))
        (let ((tmp_116 (bvxor tmp_87 #b1)))
        (let ((tmp_117 (bvxor tmp_113 #b1)))
        (let ((tmp_118 (bvand tmp_117 tmp_116)))
        (let ((tmp_119 (bvxor tmp_118 #b1)))
        (let ((tmp_120 (bvand tmp_119 tmp_115)))
        (let ((tmp_121 (bvand tmp_120 tmp_58)))
        (let ((tmp_122 (bvxor tmp_121 #b1)))
        (let ((tmp_123 (bvxor tmp_120 #b1)))
        (let ((tmp_124 (bvand tmp_123 tmp_59)))
        (let ((tmp_125 (bvxor tmp_124 #b1)))
        (let ((tmp_126 (bvand tmp_125 tmp_122)))
        (let ((tmp_127 (bvand tmp_126 tmp_85)))
        (let ((tmp_128 (bvxor tmp_127 #b1)))
        (let ((tmp_129 (bvxor tmp_85 #b1)))
        (let ((tmp_130 (bvxor tmp_126 #b1)))
        (let ((tmp_131 (bvand tmp_130 tmp_129)))
        (let ((tmp_132 (bvxor tmp_131 #b1)))
        (let ((tmp_133 (bvand tmp_132 tmp_128)))
        (let ((tmp_134 (bvand tmp_133 tmp_64)))
        (let ((tmp_135 (bvxor tmp_134 #b1)))
        (let ((tmp_136 (bvxor tmp_133 #b1)))
        (let ((tmp_137 (bvand tmp_136 tmp_65)))
        (let ((tmp_138 (bvxor tmp_137 #b1)))
        (let ((tmp_139 (bvand tmp_138 tmp_135)))
        (let ((tmp_140 (bvand tmp_139 tmp_84)))
        (let ((tmp_141 (bvxor tmp_140 #b1)))
        (let ((tmp_142 (bvxor tmp_139 #b1)))
        (let ((tmp_143 (bvand tmp_142 tmp_83)))
        (let ((tmp_144 (bvxor tmp_143 #b1)))
        (let ((tmp_145 (bvand tmp_144 tmp_141)))
        (let ((tmp_146 (bvand tmp_37 tmp_12)))
        (let ((tmp_147 (bvand tmp_139 tmp_76)))
        (let ((tmp_148 (bvand tmp_147 tmp_146)))
        (let ((tmp_149 (bvand tmp_148 tmp_32)))
        (let ((tmp_150 (bvxor tmp_149 #b1)))
        (let ((tmp_151 (bvand tmp_135 tmp_141)))
        (let ((tmp_152 (bvand tmp_151 tmp_150)))
        (let ((tmp_153 (bvxor tmp_152 #b1)))
        (let ((tmp_154 (bvand tmp_122 tmp_128)))
        (let ((tmp_155 (bvxor tmp_154 #b1)))
        (let ((tmp_156 (bvand tmp_109 tmp_115)))
        (let ((tmp_157 (bvxor tmp_156 #b1)))
        (let ((tmp_158 (bvand tmp_86 tmp_16)))
        (let ((tmp_159 (bvand tmp_95 tmp_102)))
        (let ((tmp_160 (bvxor tmp_159 #b1)))
        (let ((tmp_161 (bvand tmp_39 tmp_42)))
        (let ((tmp_162 (bvand tmp_14 tmp_92)))
        (let ((tmp_163 (bvand tmp_162 tmp_161)))
        (let ((tmp_164 (bvxor tmp_163 #b1)))
        (let ((tmp_165 (bvxor tmp_161 #b1)))
        (let ((tmp_166 (bvxor tmp_162 #b1)))
        (let ((tmp_167 (bvand tmp_166 tmp_165)))
        (let ((tmp_168 (bvxor tmp_167 #b1)))
        (let ((tmp_169 (bvand tmp_168 tmp_164)))
        (let ((tmp_170 (bvand tmp_169 tmp_160)))
        (let ((tmp_171 (bvxor tmp_170 #b1)))
        (let ((tmp_172 (bvxor tmp_169 #b1)))
        (let ((tmp_173 (bvand tmp_172 tmp_159)))
        (let ((tmp_174 (bvxor tmp_173 #b1)))
        (let ((tmp_175 (bvand tmp_174 tmp_171)))
        (let ((tmp_176 (bvand tmp_175 tmp_158)))
        (let ((tmp_177 (bvxor tmp_176 #b1)))
        (let ((tmp_178 (bvxor tmp_158 #b1)))
        (let ((tmp_179 (bvxor tmp_175 #b1)))
        (let ((tmp_180 (bvand tmp_179 tmp_178)))
        (let ((tmp_181 (bvxor tmp_180 #b1)))
        (let ((tmp_182 (bvand tmp_181 tmp_177)))
        (let ((tmp_183 (bvand tmp_182 tmp_157)))
        (let ((tmp_184 (bvxor tmp_183 #b1)))
        (let ((tmp_185 (bvxor tmp_182 #b1)))
        (let ((tmp_186 (bvand tmp_185 tmp_156)))
        (let ((tmp_187 (bvxor tmp_186 #b1)))
        (let ((tmp_188 (bvand tmp_187 tmp_184)))
        (let ((tmp_189 (bvand tmp_188 tmp_155)))
        (let ((tmp_190 (bvxor tmp_189 #b1)))
        (let ((tmp_191 (bvxor tmp_188 #b1)))
        (let ((tmp_192 (bvand tmp_191 tmp_154)))
        (let ((tmp_193 (bvxor tmp_192 #b1)))
        (let ((tmp_194 (bvand tmp_193 tmp_190)))
        (let ((tmp_195 (bvand tmp_194 tmp_153)))
        (let ((tmp_196 (bvxor tmp_195 #b1)))
        (let ((tmp_197 (bvxor tmp_194 #b1)))
        (let ((tmp_198 (bvand tmp_197 tmp_152)))
        (let ((tmp_199 (bvxor tmp_198 #b1)))
        (let ((tmp_200 (bvand tmp_199 tmp_196)))
        (let ((tmp_201 (bvand tmp_194 tmp_148)))
        (let ((tmp_202 (bvand tmp_201 tmp_84)))
        (let ((tmp_203 (bvxor tmp_202 #b1)))
        (let ((tmp_204 (bvxor tmp_151 #b1)))
        (let ((tmp_205 (bvand tmp_194 tmp_204)))
        (let ((tmp_206 (bvxor tmp_205 #b1)))
        (let ((tmp_207 (bvand tmp_190 tmp_206)))
        (let ((tmp_208 (bvand tmp_207 tmp_203)))
        (let ((tmp_209 (bvxor tmp_208 #b1)))
        (let ((tmp_210 (bvand tmp_171 tmp_177)))
        (let ((tmp_211 (bvxor tmp_210 #b1)))
        (let ((tmp_212 (bvand tmp_86 tmp_42)))
        (let ((tmp_213 (bvand tmp_39 tmp_92)))
        (let ((tmp_214 (bvand tmp_213 tmp_163)))
        (let ((tmp_215 (bvxor tmp_214 #b1)))
        (let ((tmp_216 (bvxor tmp_213 #b1)))
        (let ((tmp_217 (bvand tmp_216 tmp_164)))
        (let ((tmp_218 (bvxor tmp_217 #b1)))
        (let ((tmp_219 (bvand tmp_218 tmp_215)))
        (let ((tmp_220 (bvand tmp_219 tmp_212)))
        (let ((tmp_221 (bvxor tmp_220 #b1)))
        (let ((tmp_222 (bvxor tmp_212 #b1)))
        (let ((tmp_223 (bvxor tmp_219 #b1)))
        (let ((tmp_224 (bvand tmp_223 tmp_222)))
        (let ((tmp_225 (bvxor tmp_224 #b1)))
        (let ((tmp_226 (bvand tmp_225 tmp_221)))
        (let ((tmp_227 (bvand tmp_226 tmp_211)))
        (let ((tmp_228 (bvxor tmp_227 #b1)))
        (let ((tmp_229 (bvxor tmp_226 #b1)))
        (let ((tmp_230 (bvand tmp_229 tmp_210)))
        (let ((tmp_231 (bvxor tmp_230 #b1)))
        (let ((tmp_232 (bvand tmp_231 tmp_228)))
        (let ((tmp_233 (bvand tmp_232 tmp_183)))
        (let ((tmp_234 (bvxor tmp_233 #b1)))
        (let ((tmp_235 (bvxor tmp_232 #b1)))
        (let ((tmp_236 (bvand tmp_235 tmp_184)))
        (let ((tmp_237 (bvxor tmp_236 #b1)))
        (let ((tmp_238 (bvand tmp_237 tmp_234)))
        (let ((tmp_239 (bvand tmp_238 tmp_209)))
        (let ((tmp_240 (bvxor tmp_239 #b1)))
        (let ((tmp_241 (bvxor tmp_238 #b1)))
        (let ((tmp_242 (bvand tmp_241 tmp_208)))
        (let ((tmp_243 (bvxor tmp_242 #b1)))
        (let ((tmp_244 (bvand tmp_243 tmp_240)))
        (let ((tmp_245 (bvand tmp_238 tmp_201)))
        (let ((tmp_246 (bvand tmp_245 tmp_32)))
        (let ((tmp_247 (bvxor tmp_246 #b1)))
        (let ((tmp_248 (bvand tmp_245 tmp_153)))
        (let ((tmp_249 (bvxor tmp_248 #b1)))
        (let ((tmp_250 (bvand tmp_249 tmp_247)))
        (let ((tmp_251 (bvxor tmp_207 #b1)))
        (let ((tmp_252 (bvand tmp_238 tmp_251)))
        (let ((tmp_253 (bvxor tmp_252 #b1)))
        (let ((tmp_254 (bvand tmp_234 tmp_253)))
        (let ((tmp_255 (bvand tmp_254 tmp_250)))
        (let ((tmp_256 (bvxor tmp_255 #b1)))
        (let ((tmp_257 (bvand tmp_215 tmp_221)))
        (let ((tmp_258 (bvxor tmp_257 #b1)))
        (let ((tmp_259 (bvand tmp_86 tmp_92)))
        (let ((tmp_260 (bvand tmp_259 tmp_258)))
        (let ((tmp_261 (bvxor tmp_260 #b1)))
        (let ((tmp_262 (bvxor tmp_259 #b1)))
        (let ((tmp_263 (bvand tmp_262 tmp_257)))
        (let ((tmp_264 (bvxor tmp_263 #b1)))
        (let ((tmp_265 (bvand tmp_264 tmp_261)))
        (let ((tmp_266 (bvand tmp_265 tmp_227)))
        (let ((tmp_267 (bvxor tmp_266 #b1)))
        (let ((tmp_268 (bvxor tmp_265 #b1)))
        (let ((tmp_269 (bvand tmp_268 tmp_228)))
        (let ((tmp_270 (bvxor tmp_269 #b1)))
        (let ((tmp_271 (bvand tmp_270 tmp_267)))
        (let ((tmp_272 (bvand tmp_271 tmp_256)))
        (let ((tmp_273 (bvxor tmp_272 #b1)))
        (let ((tmp_274 (bvxor tmp_271 #b1)))
        (let ((tmp_275 (bvand tmp_274 tmp_255)))
        (let ((tmp_276 (bvxor tmp_275 #b1)))
        (let ((tmp_277 (bvand tmp_276 tmp_273)))
        (let ((tmp_278 (bvand tmp_271 tmp_245)))
        (let ((tmp_279 (bvand tmp_278 tmp_84)))
        (let ((tmp_280 (bvxor tmp_279 #b1)))
        (let ((tmp_281 (bvand tmp_278 tmp_209)))
        (let ((tmp_282 (bvxor tmp_281 #b1)))
        (let ((tmp_283 (bvand tmp_282 tmp_280)))
        (let ((tmp_284 (bvxor tmp_254 #b1)))
        (let ((tmp_285 (bvand tmp_271 tmp_284)))
        (let ((tmp_286 (bvxor tmp_285 #b1)))
        (let ((tmp_287 (bvand tmp_267 tmp_286)))
        (let ((tmp_288 (bvand tmp_287 tmp_283)))
        (let ((tmp_289 (bvxor tmp_288 #b1)))
        (let ((tmp_290 (bvand tmp_260 tmp_289)))
        (let ((tmp_291 (bvxor tmp_290 #b1)))
        (let ((tmp_292 (bvand tmp_261 tmp_288)))
        (let ((tmp_293 (bvxor tmp_292 #b1)))
        (let ((tmp_294 (bvand tmp_293 tmp_291)))
        (let ((tmp_295 (concat tmp_294 tmp_277)))
        (let ((tmp_296 (concat tmp_295 tmp_244)))
        (let ((tmp_297 (concat tmp_296 tmp_200)))
        (let ((tmp_298 (concat tmp_297 tmp_145)))
        (let ((tmp_299 (concat tmp_298 tmp_82)))
        (let ((tmp_300 (concat tmp_299 tmp_37)))
        (let ((tmp_301 (concat tmp_300 tmp_12)))
        (let ((tmp_302 (concat #x0 tmp_1)))
        (let ((tmp_303 (concat #x0 tmp_0)))
        (let ((tmp_304 (concat #x0 tmp)))
        (let ((tmp_305 (bvmul tmp_304 tmp_303)))
        (let ((tmp_306 (bvadd tmp_305 tmp_302)))
        (let ((tmp_307 (distinct tmp_306 tmp_301)))
        tmp_307)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)

(exit)