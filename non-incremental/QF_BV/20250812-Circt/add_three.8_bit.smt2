(set-info :smt-lib-version 2.6)
(set-logic QF_BV)
(set-info :source |
            Generated by: Samuel Coward
            Generated on: 2025-08-12
            Generator: CIRCT
            Application: Datapath synthesis of digital circuits 
            Target solver: Bitwuzla
            Time limit: 300.0
            Benchmarks generated by the CIRCT tool to check correctness of lowering
            from word-level bitvector circuit to a gate-level netlist.
            Using compressor tree circuits proves challenging for SMT.|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)

; solver scope 0
(declare-const tmp (_ BitVec 8))
(declare-const tmp_0 (_ BitVec 8))
(declare-const tmp_1 (_ BitVec 8))
(assert (let ((tmp_2 ((_ extract 0 0) tmp_1)))
        (let ((tmp_3 ((_ extract 0 0) tmp_0)))
        (let ((tmp_4 ((_ extract 0 0) tmp)))
        (let ((tmp_5 (bvand tmp_4 tmp_3)))
        (let ((tmp_6 (bvxor tmp_5 #b1)))
        (let ((tmp_7 (bvxor tmp_3 #b1)))
        (let ((tmp_8 (bvxor tmp_4 #b1)))
        (let ((tmp_9 (bvand tmp_8 tmp_7)))
        (let ((tmp_10 (bvxor tmp_9 #b1)))
        (let ((tmp_11 (bvand tmp_10 tmp_6)))
        (let ((tmp_12 (bvand tmp_11 tmp_2)))
        (let ((tmp_13 (bvxor tmp_12 #b1)))
        (let ((tmp_14 (bvxor tmp_2 #b1)))
        (let ((tmp_15 (bvxor tmp_11 #b1)))
        (let ((tmp_16 (bvand tmp_15 tmp_14)))
        (let ((tmp_17 (bvxor tmp_16 #b1)))
        (let ((tmp_18 (bvand tmp_17 tmp_13)))
        (let ((tmp_19 (bvand tmp_6 tmp_13)))
        (let ((tmp_20 (bvxor tmp_19 #b1)))
        (let ((tmp_21 ((_ extract 1 1) tmp_1)))
        (let ((tmp_22 ((_ extract 1 1) tmp_0)))
        (let ((tmp_23 ((_ extract 1 1) tmp)))
        (let ((tmp_24 (bvand tmp_23 tmp_22)))
        (let ((tmp_25 (bvxor tmp_24 #b1)))
        (let ((tmp_26 (bvxor tmp_22 #b1)))
        (let ((tmp_27 (bvxor tmp_23 #b1)))
        (let ((tmp_28 (bvand tmp_27 tmp_26)))
        (let ((tmp_29 (bvxor tmp_28 #b1)))
        (let ((tmp_30 (bvand tmp_29 tmp_25)))
        (let ((tmp_31 (bvand tmp_30 tmp_21)))
        (let ((tmp_32 (bvxor tmp_31 #b1)))
        (let ((tmp_33 (bvxor tmp_21 #b1)))
        (let ((tmp_34 (bvxor tmp_30 #b1)))
        (let ((tmp_35 (bvand tmp_34 tmp_33)))
        (let ((tmp_36 (bvxor tmp_35 #b1)))
        (let ((tmp_37 (bvand tmp_36 tmp_32)))
        (let ((tmp_38 (bvand tmp_37 tmp_20)))
        (let ((tmp_39 (bvxor tmp_38 #b1)))
        (let ((tmp_40 (bvxor tmp_37 #b1)))
        (let ((tmp_41 (bvand tmp_40 tmp_19)))
        (let ((tmp_42 (bvxor tmp_41 #b1)))
        (let ((tmp_43 (bvand tmp_42 tmp_39)))
        (let ((tmp_44 (bvand tmp_25 tmp_32)))
        (let ((tmp_45 (bvxor tmp_44 #b1)))
        (let ((tmp_46 ((_ extract 2 2) tmp_1)))
        (let ((tmp_47 ((_ extract 2 2) tmp_0)))
        (let ((tmp_48 ((_ extract 2 2) tmp)))
        (let ((tmp_49 (bvand tmp_48 tmp_47)))
        (let ((tmp_50 (bvxor tmp_49 #b1)))
        (let ((tmp_51 (bvxor tmp_47 #b1)))
        (let ((tmp_52 (bvxor tmp_48 #b1)))
        (let ((tmp_53 (bvand tmp_52 tmp_51)))
        (let ((tmp_54 (bvxor tmp_53 #b1)))
        (let ((tmp_55 (bvand tmp_54 tmp_50)))
        (let ((tmp_56 (bvand tmp_55 tmp_46)))
        (let ((tmp_57 (bvxor tmp_56 #b1)))
        (let ((tmp_58 (bvxor tmp_46 #b1)))
        (let ((tmp_59 (bvxor tmp_55 #b1)))
        (let ((tmp_60 (bvand tmp_59 tmp_58)))
        (let ((tmp_61 (bvxor tmp_60 #b1)))
        (let ((tmp_62 (bvand tmp_61 tmp_57)))
        (let ((tmp_63 (bvand tmp_62 tmp_45)))
        (let ((tmp_64 (bvxor tmp_63 #b1)))
        (let ((tmp_65 (bvxor tmp_62 #b1)))
        (let ((tmp_66 (bvand tmp_65 tmp_44)))
        (let ((tmp_67 (bvxor tmp_66 #b1)))
        (let ((tmp_68 (bvand tmp_67 tmp_64)))
        (let ((tmp_69 (bvand tmp_68 tmp_38)))
        (let ((tmp_70 (bvxor tmp_69 #b1)))
        (let ((tmp_71 (bvxor tmp_68 #b1)))
        (let ((tmp_72 (bvand tmp_71 tmp_39)))
        (let ((tmp_73 (bvxor tmp_72 #b1)))
        (let ((tmp_74 (bvand tmp_73 tmp_70)))
        (let ((tmp_75 (bvand tmp_64 tmp_70)))
        (let ((tmp_76 (bvxor tmp_75 #b1)))
        (let ((tmp_77 (bvand tmp_50 tmp_57)))
        (let ((tmp_78 (bvxor tmp_77 #b1)))
        (let ((tmp_79 ((_ extract 3 3) tmp_1)))
        (let ((tmp_80 ((_ extract 3 3) tmp_0)))
        (let ((tmp_81 ((_ extract 3 3) tmp)))
        (let ((tmp_82 (bvand tmp_81 tmp_80)))
        (let ((tmp_83 (bvxor tmp_82 #b1)))
        (let ((tmp_84 (bvxor tmp_80 #b1)))
        (let ((tmp_85 (bvxor tmp_81 #b1)))
        (let ((tmp_86 (bvand tmp_85 tmp_84)))
        (let ((tmp_87 (bvxor tmp_86 #b1)))
        (let ((tmp_88 (bvand tmp_87 tmp_83)))
        (let ((tmp_89 (bvand tmp_88 tmp_79)))
        (let ((tmp_90 (bvxor tmp_89 #b1)))
        (let ((tmp_91 (bvxor tmp_79 #b1)))
        (let ((tmp_92 (bvxor tmp_88 #b1)))
        (let ((tmp_93 (bvand tmp_92 tmp_91)))
        (let ((tmp_94 (bvxor tmp_93 #b1)))
        (let ((tmp_95 (bvand tmp_94 tmp_90)))
        (let ((tmp_96 (bvand tmp_95 tmp_78)))
        (let ((tmp_97 (bvxor tmp_96 #b1)))
        (let ((tmp_98 (bvxor tmp_95 #b1)))
        (let ((tmp_99 (bvand tmp_98 tmp_77)))
        (let ((tmp_100 (bvxor tmp_99 #b1)))
        (let ((tmp_101 (bvand tmp_100 tmp_97)))
        (let ((tmp_102 (bvand tmp_101 tmp_76)))
        (let ((tmp_103 (bvxor tmp_102 #b1)))
        (let ((tmp_104 (bvxor tmp_101 #b1)))
        (let ((tmp_105 (bvand tmp_104 tmp_75)))
        (let ((tmp_106 (bvxor tmp_105 #b1)))
        (let ((tmp_107 (bvand tmp_106 tmp_103)))
        (let ((tmp_108 (bvand tmp_43 tmp_18)))
        (let ((tmp_109 (bvand tmp_101 tmp_68)))
        (let ((tmp_110 (bvand tmp_109 tmp_108)))
        (let ((tmp_111 (bvand tmp_110 tmp_38)))
        (let ((tmp_112 (bvxor tmp_111 #b1)))
        (let ((tmp_113 (bvand tmp_97 tmp_103)))
        (let ((tmp_114 (bvand tmp_113 tmp_112)))
        (let ((tmp_115 (bvxor tmp_114 #b1)))
        (let ((tmp_116 (bvand tmp_83 tmp_90)))
        (let ((tmp_117 (bvxor tmp_116 #b1)))
        (let ((tmp_118 ((_ extract 4 4) tmp_1)))
        (let ((tmp_119 ((_ extract 4 4) tmp_0)))
        (let ((tmp_120 ((_ extract 4 4) tmp)))
        (let ((tmp_121 (bvand tmp_120 tmp_119)))
        (let ((tmp_122 (bvxor tmp_121 #b1)))
        (let ((tmp_123 (bvxor tmp_119 #b1)))
        (let ((tmp_124 (bvxor tmp_120 #b1)))
        (let ((tmp_125 (bvand tmp_124 tmp_123)))
        (let ((tmp_126 (bvxor tmp_125 #b1)))
        (let ((tmp_127 (bvand tmp_126 tmp_122)))
        (let ((tmp_128 (bvand tmp_127 tmp_118)))
        (let ((tmp_129 (bvxor tmp_128 #b1)))
        (let ((tmp_130 (bvxor tmp_118 #b1)))
        (let ((tmp_131 (bvxor tmp_127 #b1)))
        (let ((tmp_132 (bvand tmp_131 tmp_130)))
        (let ((tmp_133 (bvxor tmp_132 #b1)))
        (let ((tmp_134 (bvand tmp_133 tmp_129)))
        (let ((tmp_135 (bvand tmp_134 tmp_117)))
        (let ((tmp_136 (bvxor tmp_135 #b1)))
        (let ((tmp_137 (bvxor tmp_134 #b1)))
        (let ((tmp_138 (bvand tmp_137 tmp_116)))
        (let ((tmp_139 (bvxor tmp_138 #b1)))
        (let ((tmp_140 (bvand tmp_139 tmp_136)))
        (let ((tmp_141 (bvand tmp_140 tmp_115)))
        (let ((tmp_142 (bvxor tmp_141 #b1)))
        (let ((tmp_143 (bvxor tmp_140 #b1)))
        (let ((tmp_144 (bvand tmp_143 tmp_114)))
        (let ((tmp_145 (bvxor tmp_144 #b1)))
        (let ((tmp_146 (bvand tmp_145 tmp_142)))
        (let ((tmp_147 (bvand tmp_140 tmp_110)))
        (let ((tmp_148 (bvand tmp_147 tmp_76)))
        (let ((tmp_149 (bvxor tmp_148 #b1)))
        (let ((tmp_150 (bvxor tmp_113 #b1)))
        (let ((tmp_151 (bvand tmp_140 tmp_150)))
        (let ((tmp_152 (bvxor tmp_151 #b1)))
        (let ((tmp_153 (bvand tmp_136 tmp_152)))
        (let ((tmp_154 (bvand tmp_153 tmp_149)))
        (let ((tmp_155 (bvxor tmp_154 #b1)))
        (let ((tmp_156 (bvand tmp_122 tmp_129)))
        (let ((tmp_157 (bvxor tmp_156 #b1)))
        (let ((tmp_158 ((_ extract 5 5) tmp_1)))
        (let ((tmp_159 ((_ extract 5 5) tmp_0)))
        (let ((tmp_160 ((_ extract 5 5) tmp)))
        (let ((tmp_161 (bvand tmp_160 tmp_159)))
        (let ((tmp_162 (bvxor tmp_161 #b1)))
        (let ((tmp_163 (bvxor tmp_159 #b1)))
        (let ((tmp_164 (bvxor tmp_160 #b1)))
        (let ((tmp_165 (bvand tmp_164 tmp_163)))
        (let ((tmp_166 (bvxor tmp_165 #b1)))
        (let ((tmp_167 (bvand tmp_166 tmp_162)))
        (let ((tmp_168 (bvand tmp_167 tmp_158)))
        (let ((tmp_169 (bvxor tmp_168 #b1)))
        (let ((tmp_170 (bvxor tmp_158 #b1)))
        (let ((tmp_171 (bvxor tmp_167 #b1)))
        (let ((tmp_172 (bvand tmp_171 tmp_170)))
        (let ((tmp_173 (bvxor tmp_172 #b1)))
        (let ((tmp_174 (bvand tmp_173 tmp_169)))
        (let ((tmp_175 (bvand tmp_174 tmp_157)))
        (let ((tmp_176 (bvxor tmp_175 #b1)))
        (let ((tmp_177 (bvxor tmp_174 #b1)))
        (let ((tmp_178 (bvand tmp_177 tmp_156)))
        (let ((tmp_179 (bvxor tmp_178 #b1)))
        (let ((tmp_180 (bvand tmp_179 tmp_176)))
        (let ((tmp_181 (bvand tmp_180 tmp_155)))
        (let ((tmp_182 (bvxor tmp_181 #b1)))
        (let ((tmp_183 (bvxor tmp_180 #b1)))
        (let ((tmp_184 (bvand tmp_183 tmp_154)))
        (let ((tmp_185 (bvxor tmp_184 #b1)))
        (let ((tmp_186 (bvand tmp_185 tmp_182)))
        (let ((tmp_187 (bvand tmp_180 tmp_147)))
        (let ((tmp_188 (bvand tmp_187 tmp_38)))
        (let ((tmp_189 (bvxor tmp_188 #b1)))
        (let ((tmp_190 (bvand tmp_187 tmp_115)))
        (let ((tmp_191 (bvxor tmp_190 #b1)))
        (let ((tmp_192 (bvxor tmp_153 #b1)))
        (let ((tmp_193 (bvand tmp_180 tmp_192)))
        (let ((tmp_194 (bvxor tmp_193 #b1)))
        (let ((tmp_195 (bvand tmp_176 tmp_194)))
        (let ((tmp_196 (bvand tmp_195 tmp_191)))
        (let ((tmp_197 (bvand tmp_196 tmp_189)))
        (let ((tmp_198 (bvxor tmp_197 #b1)))
        (let ((tmp_199 (bvand tmp_162 tmp_169)))
        (let ((tmp_200 (bvxor tmp_199 #b1)))
        (let ((tmp_201 ((_ extract 6 6) tmp_1)))
        (let ((tmp_202 ((_ extract 6 6) tmp_0)))
        (let ((tmp_203 ((_ extract 6 6) tmp)))
        (let ((tmp_204 (bvand tmp_203 tmp_202)))
        (let ((tmp_205 (bvxor tmp_204 #b1)))
        (let ((tmp_206 (bvxor tmp_202 #b1)))
        (let ((tmp_207 (bvxor tmp_203 #b1)))
        (let ((tmp_208 (bvand tmp_207 tmp_206)))
        (let ((tmp_209 (bvxor tmp_208 #b1)))
        (let ((tmp_210 (bvand tmp_209 tmp_205)))
        (let ((tmp_211 (bvand tmp_210 tmp_201)))
        (let ((tmp_212 (bvxor tmp_211 #b1)))
        (let ((tmp_213 (bvxor tmp_201 #b1)))
        (let ((tmp_214 (bvxor tmp_210 #b1)))
        (let ((tmp_215 (bvand tmp_214 tmp_213)))
        (let ((tmp_216 (bvxor tmp_215 #b1)))
        (let ((tmp_217 (bvand tmp_216 tmp_212)))
        (let ((tmp_218 (bvand tmp_217 tmp_200)))
        (let ((tmp_219 (bvxor tmp_218 #b1)))
        (let ((tmp_220 (bvxor tmp_217 #b1)))
        (let ((tmp_221 (bvand tmp_220 tmp_199)))
        (let ((tmp_222 (bvxor tmp_221 #b1)))
        (let ((tmp_223 (bvand tmp_222 tmp_219)))
        (let ((tmp_224 (bvand tmp_223 tmp_198)))
        (let ((tmp_225 (bvxor tmp_224 #b1)))
        (let ((tmp_226 (bvxor tmp_223 #b1)))
        (let ((tmp_227 (bvand tmp_226 tmp_197)))
        (let ((tmp_228 (bvxor tmp_227 #b1)))
        (let ((tmp_229 (bvand tmp_228 tmp_225)))
        (let ((tmp_230 (bvand tmp_223 tmp_187)))
        (let ((tmp_231 (bvand tmp_230 tmp_76)))
        (let ((tmp_232 (bvxor tmp_231 #b1)))
        (let ((tmp_233 (bvand tmp_230 tmp_155)))
        (let ((tmp_234 (bvxor tmp_233 #b1)))
        (let ((tmp_235 (bvand tmp_234 tmp_232)))
        (let ((tmp_236 (bvxor tmp_195 #b1)))
        (let ((tmp_237 (bvand tmp_223 tmp_236)))
        (let ((tmp_238 (bvxor tmp_237 #b1)))
        (let ((tmp_239 (bvand tmp_219 tmp_238)))
        (let ((tmp_240 (bvand tmp_239 tmp_235)))
        (let ((tmp_241 (bvxor tmp_240 #b1)))
        (let ((tmp_242 (bvand tmp_205 tmp_212)))
        (let ((tmp_243 (bvxor tmp_242 #b1)))
        (let ((tmp_244 ((_ extract 7 7) tmp_1)))
        (let ((tmp_245 ((_ extract 7 7) tmp_0)))
        (let ((tmp_246 ((_ extract 7 7) tmp)))
        (let ((tmp_247 (bvand tmp_246 tmp_245)))
        (let ((tmp_248 (bvxor tmp_247 #b1)))
        (let ((tmp_249 (bvxor tmp_245 #b1)))
        (let ((tmp_250 (bvxor tmp_246 #b1)))
        (let ((tmp_251 (bvand tmp_250 tmp_249)))
        (let ((tmp_252 (bvxor tmp_251 #b1)))
        (let ((tmp_253 (bvand tmp_252 tmp_248)))
        (let ((tmp_254 (bvand tmp_253 tmp_244)))
        (let ((tmp_255 (bvxor tmp_254 #b1)))
        (let ((tmp_256 (bvxor tmp_244 #b1)))
        (let ((tmp_257 (bvxor tmp_253 #b1)))
        (let ((tmp_258 (bvand tmp_257 tmp_256)))
        (let ((tmp_259 (bvxor tmp_258 #b1)))
        (let ((tmp_260 (bvand tmp_259 tmp_255)))
        (let ((tmp_261 (bvand tmp_260 tmp_243)))
        (let ((tmp_262 (bvxor tmp_261 #b1)))
        (let ((tmp_263 (bvxor tmp_260 #b1)))
        (let ((tmp_264 (bvand tmp_263 tmp_242)))
        (let ((tmp_265 (bvxor tmp_264 #b1)))
        (let ((tmp_266 (bvand tmp_265 tmp_262)))
        (let ((tmp_267 (bvand tmp_266 tmp_241)))
        (let ((tmp_268 (bvxor tmp_267 #b1)))
        (let ((tmp_269 (bvxor tmp_266 #b1)))
        (let ((tmp_270 (bvand tmp_269 tmp_240)))
        (let ((tmp_271 (bvxor tmp_270 #b1)))
        (let ((tmp_272 (bvand tmp_271 tmp_268)))
        (let ((tmp_273 (bvand tmp_266 tmp_230)))
        (let ((tmp_274 (bvand tmp_273 tmp_115)))
        (let ((tmp_275 (bvxor tmp_274 #b1)))
        (let ((tmp_276 (bvxor tmp_196 #b1)))
        (let ((tmp_277 (bvand tmp_273 tmp_276)))
        (let ((tmp_278 (bvxor tmp_277 #b1)))
        (let ((tmp_279 (bvand tmp_278 tmp_275)))
        (let ((tmp_280 (bvxor tmp_239 #b1)))
        (let ((tmp_281 (bvand tmp_266 tmp_280)))
        (let ((tmp_282 (bvxor tmp_281 #b1)))
        (let ((tmp_283 (bvand tmp_262 tmp_282)))
        (let ((tmp_284 (bvand tmp_283 tmp_279)))
        (let ((tmp_285 (bvxor tmp_284 #b1)))
        (let ((tmp_286 (bvand tmp_248 tmp_255)))
        (let ((tmp_287 (bvxor tmp_286 #b1)))
        (let ((tmp_288 (bvand tmp_287 tmp_285)))
        (let ((tmp_289 (bvxor tmp_288 #b1)))
        (let ((tmp_290 (bvand tmp_286 tmp_284)))
        (let ((tmp_291 (bvxor tmp_290 #b1)))
        (let ((tmp_292 (bvand tmp_291 tmp_289)))
        (let ((tmp_293 (concat tmp_292 tmp_272)))
        (let ((tmp_294 (concat tmp_293 tmp_229)))
        (let ((tmp_295 (concat tmp_294 tmp_186)))
        (let ((tmp_296 (concat tmp_295 tmp_146)))
        (let ((tmp_297 (concat tmp_296 tmp_107)))
        (let ((tmp_298 (concat tmp_297 tmp_74)))
        (let ((tmp_299 (concat tmp_298 tmp_43)))
        (let ((tmp_300 (concat tmp_299 tmp_18)))
        (let ((tmp_301 (concat #b0 tmp_1)))
        (let ((tmp_302 (concat #b0 tmp_0)))
        (let ((tmp_303 (concat #b0 tmp)))
        (let ((tmp_304 (bvadd tmp_303 tmp_302)))
        (let ((tmp_305 (bvadd tmp_304 tmp_301)))
        (let ((tmp_306 (distinct tmp_305 tmp_300)))
        tmp_306))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)

(exit)